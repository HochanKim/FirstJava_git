-- 1. 김인중 학생이 들은 수업의 과목명과 교수 이름 출력
SELECT STU_NAME, SUB_NAME, SUB_PROF
FROM STUDENT S
INNER JOIN ENROL E ON S.STU_NO = E.STU_NO
INNER JOIN SUBJECT SJ ON E.SUB_NO = SJ.SUB_NO
WHERE STU_NAME = '김인중';

--SELECT STU_NAME, SUB_NAME, SUB_PROF
--FROM STUDENT S
--INNER JOIN SUBJECT SJ ON S.STU_DEPT = SJ.SUB_DEPT     -- 바람직한 JOIN이 아님
--WHERE STU_NAME = '김인중';

-- 2. 기계공작법, 기초전자실험 수업을 듣는 학생의 학번, 이름, 수업명 출력
SELECT S.STU_NO, S.STU_NAME, SUB_NAME
FROM ENROL E
INNER JOIN STUDENT S ON S.STU_NO = E.STU_NO
INNER JOIN SUBJECT SJ ON SJ.SUB_NO = E.SUB_NO
WHERE SUB_NAME = '기계공작법' OR SUB_NAME = '기초전자실험';

-- 3. 여자이면서 구봉규 교수의 수업을 드는 학생의 학번, 이름, 학과, 수업명, 과목 점수 출력
SELECT S.STU_NO, STU_NAME, STU_DEPT, SUB_NAME, ENR_GRADE
FROM ENROL E
INNER JOIN SUBJECT SJ ON SJ.SUB_NO = E.SUB_NO
INNER JOIN STUDENT S ON E.STU_NO = S.STU_NO
WHERE S.STU_GENDER = 'F' AND SJ.SUB_PROF = '구봉규';

-- 4. 김인중의 평균 점수보다 낮은 점수를 받은 학생들의 이름, 과목명, 점수 출력
SELECT *
FROM STUDENT 
WHERE STU_NAME = '김인중';

SELECT AVG(ENR_GRADE) AS IJ_KIM_AVG
FROM ENROL
WHERE STU_NO = '20151062';

SELECT STU_NAME, SUB_NAME, ENR_GRADE
FROM ENROL E
INNER JOIN STUDENT S ON S.STU_NO = E.STU_NO
INNER JOIN SUBJECT SJ ON SJ.SUB_NO = E.SUB_NO;

SELECT *
FROM (
    SELECT STU_NAME, SUB_NAME, ENR_GRADE
    FROM ENROL E
    INNER JOIN STUDENT S ON S.STU_NO = E.STU_NO
    INNER JOIN SUBJECT SJ ON SJ.SUB_NO = E.SUB_NO
) WHERE ENR_GRADE < (
    SELECT AVG(ENR_GRADE) AS IJ_KIM_AVG
    FROM ENROL
    WHERE STU_NO = '20151062'
);

-- 5. 2개 이상의 과목을 듣는 학생들의 목록 출력(과목명, 점수)
SELECT *
FROM STUDENT S
INNER JOIN ENROL E ON S.STU_NO = E.STU_NO
INNER JOIN SUBJECT SJ ON E.SUB_NO = SJ.SUB_NO
INNER JOIN (
    SELECT COUNT(*) AS CNT, STU_NO
    FROM ENROL
    GROUP BY STU_NO
) C ON C.STU_NO = S.STU_NO
WHERE CNT >= 2;

SELECT *
FROM STUDENT S
INNER JOIN ENROL E ON S.STU_NO = E.STU_NO
INNER JOIN SUBJECT SJ ON E.SUB_NO = SJ.SUB_NO
WHERE S.STU_NO IN (
    SELECT STU_NO
    FROM (
        SELECT COUNT(*) AS CNT, STU_NO
        FROM ENROL
        GROUP BY STU_NO
    ) WHERE CNT >= 2
)
ORDER BY STU_NAME;

SELECT *
FROM (  -- 서브쿼리에 회수 카운트 입력
    SELECT COUNT(*) AS CNT, STU_NO
    FROM ENROL
    GROUP BY STU_NO
) WHERE CNT >= 2;   -- 컬럼화한 카운트 변수명으로 조건문 연산

SELECT COUNT(*) AS CNT, STU_NO  -- 학번당 수업 듣는 회수 카운트, 카운트를 컬럼화
FROM ENROL
GROUP BY STU_NO;



-- 6. 전기전자과의 평균 점수보다 높은 평균점수를 받은 학생들의 목록 출력
-- HAVING 사용
SELECT AVG(ENR_GRADE), STU_NAME
FROM ENROL E
INNER JOIN STUDENT S ON S.STU_NO = E.STU_NO
GROUP BY S.STU_NO, STU_NAME
HAVING AVG(ENR_GRADE) > (   -- 그룹함수에 대한 문법은 HAVING을 사용하여 적용할수 있다.
    SELECT AVG(ENR_GRADE)
    FROM ENROL E
    INNER JOIN STUDENT S ON S.STU_NO = E.STU_NO
    WHERE S.STU_DEPT = '전기전자'
    GROUP BY S.STU_DEPT
) ON C.STU_DEPT = S.STU_DEPT;

-- 풀이
SELECT STU_AVG, STU_NAME
FROM (
    SELECT AVG(ENR_GRADE) AS STU_AVG, STU_NAME
    FROM ENROL E
    INNER JOIN STUDENT S ON S.STU_NO = E.STU_NO
    GROUP BY STU_NAME
)
WHERE STU_AVG > (
    SELECT AVG(ENR_GRADE)
    FROM ENROL E
    INNER JOIN STUDENT S ON S.STU_NO = E.STU_NO
    WHERE S.STU_DEPT = '전기전자'
    GROUP BY S.STU_DEPT
);

--SELECT AVG(ENR_GRADE), STU_NAME
--FROM ENROL E
--INNER JOIN STUDENT S ON S.STU_NO = E.STU_NO
--GROUP BY STU_NAME;
--
--SELECT AVG(ENR_GRADE)
--FROM ENROL E
--INNER JOIN STUDENT S ON S.STU_NO = E.STU_NO
--WHERE S.STU_DEPT = '전기전자'
--GROUP BY S.STU_DEPT;

-- EX) 학과의 평균 키가 165 이상인 학과 출력
SELECT ROUND(AVG(STU_HEIGHT), 1), STU_DEPT
FROM STUDENT
GROUP BY STU_DEPT
HAVING AVG(STU_HEIGHT) >= 165;


