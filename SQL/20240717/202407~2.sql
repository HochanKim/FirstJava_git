CREATE TABLE BOOK_LOG(
    BOOKID_L NUMBER,
    OLD_PRICE NUMBER,
    NEW_PRICE NUMBER,
    CDATETIME DATE,
    ID VARCHAR2(40)
);
COMMIT;

SELECT * FROM BOOK_LOG;

-- TRIGGER 작성
CREATE OR REPLACE TRIGGER BOOK_TRIGGER1
    AFTER
    UPDATE ON BOOK
    FOR EACH ROW
BEGIN
    INSERT INTO BOOK_LOG
    VALUES(:NEW.BOOKID, :OLD.PRICE, :NEW.PRICE, SYSDATE, SYS_CONTEXT('USERENV', 'SESSION_USER'));
END;
/
-- SYS_CONTEXT('USERENV', 'SESSION_USER') => 오라클 DB툴의 계정정보를 담는 파라미터

UPDATE BOOK
SET
    PRICE = 8000
WHERE
    BOOKID = 1;
COMMIT;

SELECT *
FROM BOOK_LOG;


-- 1. STUDENT_LOG 테이블 만들기
-- -> L_STUNO, L_STUNAME, L_STUDEPT, L_DATE, L_ID
CREATE TABLE STUDENT_LOG(
    L_STUNO CHAR(8),
    L_STUNAME VARCHAR2(12),
    L_STUDEPT VARCHAR2(20),
    L_DATE DATE,
    L_ID VARCHAR2(40)
);
COMMIT;

-- 2. STUDENT 트리거 만들기
CREATE OR REPLACE TRIGGER STUDENT_TRIGGER1
    AFTER
    INSERT OR UPDATE ON STUDENT
    FOR EACH ROW
BEGIN
    IF INSERTING THEN
        INSERT INTO STUDENT_LOG
        VALUES (:NEW.STU_NO, :NEW.STU_NAME, :NEW.STU_DEPT, SYSDATE, SYS_CONTEXT('USERENV', 'SESSION_USER'), 'I');
    ELSIF UPDATING THEN
        INSERT INTO STUDENT_LOG
        VALUES (:NEW.STU_NO, :NEW.STU_NAME, :NEW.STU_DEPT, SYSDATE, SYS_CONTEXT('USERENV', 'SESSION_USER'), 'U');
    END IF;
END;
/

--CREATE OR REPLACE TRIGGER STUDENT_TRIGGER1
--    AFTER
--    UPDATE ON STUDENT
--    FOR EACH ROW
--BEGIN
--    INSERT INTO STUDENT_LOG
--    VALUES(:NEW.STUNO, :NEW.STUNAME, :NEW.STUDEPT, SYSDATE, SYS_CONTEXT('USERENV', 'SESSION_USER'));
--END;
--/
SELECT * FROM STUDENT_LOG;
-- 3. 데이터가 INSERT OR UPDATE되면 STUDENT_LOG에 데이터 삽입
UPDATE STUDENT
SET
    STU_NAME = '옥서영'
WHERE 
    STU_NO = 20131025;
    
UPDATE STUDENT
SET
    STU_HEIGHT = STU_HEIGHT + 1
WHERE 
    STU_NO = 20143054;
    
INSERT INTO STUDENT (STU_NO, STU_NAME, STU_DEPT)
VALUES (12341234, '홍길동', '기계');

COMMIT;




