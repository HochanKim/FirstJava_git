-- 1. 교수번호가 1003번인 사람의 학과에 속한 학생들의 학번, 이름, 학년 출력
SELECT P.PROFNO, P.NAME, D.DNAME, S.STUNO, S.NAME, S.GRADE
FROM PROFESSOR P
INNER JOIN DEPARTMENT D ON P.DEPTNO = D.DEPTNO
INNER JOIN STU S ON D.DEPTNO = S.DEPTNO1
WHERE P.PROFNO = 1003;


-- 2. PROFESSOR 테이블에서 400이상의 급여를 받으면 A, 
--		300~400 사이면 B, 나머지는 C로 출력
SELECT NAME, PAY,
    CASE WHEN PAY >= 400 THEN 'A'
         WHEN PAY BETWEEN 300 AND 400 THEN 'B'
    ELSE 'C'
    END AS PAY_GRADE
FROM PROFESSOR
ORDER BY PAY_GRADE;

-- 3. PROFESSOR 테이블에서 id의 앞에 3글자를 *로 표기(이미지 카페 참고)
SELECT NAME, LPAD(SUBSTR(ID, 4), LENGTH(ID), '*') AS ID
FROM PROFESSOR;

-- 4. PROFESSOR 테이블에서 직급(POSITION)별 
--		가장 큰 급여를 받는 사람의 이름, 급여, 직급 출력
SELECT NAME, P.PAY, P.POSITION
FROM PROFESSOR P
INNER JOIN (
    SELECT MAX(PAY) AS MAX_PAY, POSITION
    FROM PROFESSOR
    GROUP BY POSITION
) M ON P.POSITION = M.POSITION AND P.PAY = M.MAX_PAY;

--SELECT MAX(PAY), POSITION
--FROM PROFESSOR
--GROUP BY POSITION;

-- 5. 학생들이 가장 많이 태어난 달 찾기(2개 이상이 같은 경우 레코드 2개 출력)
SELECT MAX(MAX_CNT), BIRTH_MM
FROM (
    SELECT COUNT(*) AS MAX_CNT, BIRTH_MM
    FROM (
        SELECT COUNT(*), BIRTHDAY,
            TO_CHAR(BIRTHDAY, 'MM') AS BIRTH_MM
        FROM STU
        GROUP BY BIRTHDAY
    )
    GROUP BY BIRTH_MM
    ORDER BY BIRTH_MM
)
HAVING MAX(MAX_CNT) = 3
GROUP BY BIRTH_MM
ORDER BY BIRTH_MM;


--SELECT COUNT(*), BIRTH_MM
--FROM (
--    SELECT COUNT(*), BIRTHDAY,
--        TO_CHAR(BIRTHDAY, 'MM') AS BIRTH_MM
--    FROM STU
--    GROUP BY BIRTHDAY
--)
--GROUP BY BIRTH_MM
--ORDER BY BIRTH_MM;
--
--
--SELECT COUNT(*), BIRTHDAY,
--    TO_CHAR(BIRTHDAY, 'MM') AS BIRTH_MM
--FROM STU
--GROUP BY BIRTHDAY
--ORDER BY BIRTH_MM;

-- 풀이 VER
SELECT MAX(CNT), MONTH
FROM (
    SELECT COUNT(SUBSTR(JUMIN, 3, 2)) AS CNT, SUBSTR(JUMIN, 3, 2) AS MONTH
    FROM STU
    GROUP BY SUBSTR(JUMIN, 3, 2)
    ORDER BY CNT DESC
)
GROUP BY MONTH
HAVING MAX(CNT) = 3
ORDER BY MONTH;

